// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String              @id @default(cuid())
  username           String?
  email              String              @unique
  password           String
  whatsappSessions   WhatsappSession[]
  workflows          Workflow[]
  sendingLists       SendingList[]
  scheduledWorkflows ScheduledWorkflow[]
}

model WhatsappSession {
  id      String  @id @default(cuid())
  session String?
  status  String?
  qr      String?
  retries Int?    @default(0)
  user    User?   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId  String?
  chats   Chats[]
}

model Chats {
  id           String  @id @default(cuid())
  whatsappId   String
  whatsappName String
  isGroup      Boolean @default(false)

  whatsappSession   WhatsappSession? @relation(fields: [whatsappSessionId], references: [id], onDelete: Cascade)
  whatsappSessionId String?
}

model Workflow {
  id          String  @id @default(cuid())
  title       String
  description String?
  messages    String?
  scheduledWorkflow ScheduledWorkflow[]

  user              User?               @relation(fields: [userId], references: [id])
  userId            String?
}

model SendingList {
  id   String  @id @default(cuid())
  name String
  list String?
  scheduledWorkflow ScheduledWorkflow[]

  user              User?               @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId            String?
}

model ScheduledWorkflow {
  id        String   @id @default(cuid())
  startTime DateTime

  user          User?        @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId        String?
  sendingList   SendingList? @relation(fields: [sendingListId], references: [id], onDelete: Cascade)
  sendingListId String?
  workflow      Workflow?    @relation(fields: [workflowId], references: [id], onDelete: Cascade)
  workflowId    String?
}
